{
  "openapi": "3.0.0",
  "info": {
    "title": "AAW Microservices API",
    "version": "1.0.0",
    "description": "Complete API documentation for AAW microservices including Authentication, Orders, Products, Tenant, and Wishlist services."
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Authentication Service"
    },
    {
      "url": "http://localhost:8001", 
      "description": "Orders Service"
    },
    {
      "url": "http://localhost:8002",
      "description": "Products Service"
    },
    {
      "url": "http://localhost:8003",
      "description": "Tenant Service"
    },
    {
      "url": "http://localhost:8004",
      "description": "Wishlist Service"
    }
  ],
  "tags": [
    {"name": "Authentication", "description": "User authentication operations"},
    {"name": "Orders", "description": "Order management operations"},
    {"name": "Cart", "description": "Shopping cart operations"},
    {"name": "Products", "description": "Product catalog operations"},
    {"name": "Categories", "description": "Product category operations"},
    {"name": "Tenant", "description": "Tenant management"},
    {"name": "Wishlist", "description": "User wishlist operations"}
  ],
  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string", "format": "email"},
                  "password": {"type": "string"},
                  "name": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "User registered successfully"},
          "400": {"description": "Invalid input"}
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string", "format": "email"},
                  "password": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Login successful"},
          "401": {"description": "Invalid credentials"}
        }
      }
    },
    "/api/v1/auth/verify-token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify user token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Token is valid"},
          "401": {"description": "Invalid token"}
        }
      }
    },
    "/api/v1/auth/verify-admin-token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify admin token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Admin token is valid"},
          "401": {"description": "Invalid admin token"}
        }
      }
    },
    "/api/v2/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all user orders",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {"description": "List of orders"},
          "401": {"description": "Unauthorized"}
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Place a new order",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {"type": "array"},
                  "total": {"type": "number"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Order placed successfully"},
          "400": {"description": "Invalid order data"}
        }
      }
    },
    "/api/v2/orders/{orderId}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order details",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Order details"},
          "404": {"description": "Order not found"}
        }
      }
    },
    "/api/v2/orders/{orderId}/pay": {
      "post": {
        "tags": ["Orders"],
        "summary": "Pay for an order",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Payment successful"},
          "400": {"description": "Payment failed"}
        }
      }
    },
    "/api/v2/orders/{orderId}/cancel": {
      "post": {
        "tags": ["Orders"],
        "summary": "Cancel an order",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Order cancelled"},
          "400": {"description": "Cannot cancel order"}
        }
      }
    },
    "/api/v2/carts": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get all cart items",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {"description": "List of cart items"},
          "401": {"description": "Unauthorized"}
        }
      },
      "post": {
        "tags": ["Cart"],
        "summary": "Add item to cart",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {"type": "string"},
                  "quantity": {"type": "number"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Item added to cart"},
          "400": {"description": "Invalid item data"}
        }
      },
      "put": {
        "tags": ["Cart"],
        "summary": "Edit cart item",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {"type": "string"},
                  "quantity": {"type": "number"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Cart item updated"},
          "404": {"description": "Item not found"}
        }
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Delete cart item",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Item removed from cart"},
          "404": {"description": "Item not found"}
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "responses": {
          "200": {"description": "List of products"}
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "price": {"type": "number"},
                  "category_id": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Product created"},
          "400": {"description": "Invalid product data"}
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Product details"},
          "404": {"description": "Product not found"}
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update product",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Product updated"},
          "404": {"description": "Product not found"}
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Product deleted"},
          "404": {"description": "Product not found"}
        }
      }
    },
    "/api/products/many": {
      "post": {
        "tags": ["Products"],
        "summary": "Get multiple products by IDs",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {"type": "array", "items": {"type": "string"}}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "List of products"}
        }
      }
    },
    "/api/products/category": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "responses": {
          "200": {"description": "List of categories"}
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Create a new category",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Category created"}
        }
      }
    },
    "/api/products/category/{category_id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get products by category",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "List of products in category"}
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update category",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Category updated"}
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete category",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Category deleted"}
        }
      }
    },
    "/api/tenants/{tenant_id}": {
      "get": {
        "tags": ["Tenant"],
        "summary": "Get tenant by ID",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Tenant details"},
          "404": {"description": "Tenant not found"}
        }
      }
    },
    "/api/tenants": {
      "post": {
        "tags": ["Tenant"],
        "summary": "Create a new tenant",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "domain": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Tenant created"}
        }
      },
      "delete": {
        "tags": ["Tenant"],
        "summary": "Delete tenant",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {"description": "Tenant deleted"}
        }
      }
    },
    "/api/tenants/{old_tenant_id}": {
      "put": {
        "tags": ["Tenant"],
        "summary": "Update tenant",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "old_tenant_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Tenant updated"}
        }
      }
    },
    "/api/v2/wishlists": {
      "get": {
        "tags": ["Wishlist"],
        "summary": "Get all user wishlists",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {"description": "List of wishlists"}
        }
      },
      "post": {
        "tags": ["Wishlist"],
        "summary": "Create a new wishlist",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Wishlist created"}
        }
      }
    },
    "/api/v2/wishlists/{id}": {
      "get": {
        "tags": ["Wishlist"],
        "summary": "Get wishlist by ID",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Wishlist details"}
        }
      },
      "put": {
        "tags": ["Wishlist"],
        "summary": "Update wishlist",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Wishlist updated"}
        }
      },
      "delete": {
        "tags": ["Wishlist"],
        "summary": "Delete wishlist",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {"description": "Wishlist deleted"}
        }
      }
    },
    "/api/v2/wishlists/add": {
      "post": {
        "tags": ["Wishlist"],
        "summary": "Add product to wishlist",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "wishlistId": {"type": "string"},
                  "productId": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Product added to wishlist"}
        }
      }
    },
    "/api/v2/wishlists/remove": {
      "delete": {
        "tags": ["Wishlist"],
        "summary": "Remove product from wishlist",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "wishlistId": {"type": "string"},
                  "productId": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Product removed from wishlist"}
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}